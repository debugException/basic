<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xh.basic.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.xh.basic.model.User">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="role" jdbcType="VARCHAR" property="role" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, password, role
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.xh.basic.model.User">
    insert into user (id, username, password, 
      role)
    values (#{id,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{role,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xh.basic.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="role != null">
        role,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xh.basic.model.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xh.basic.model.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      role = #{role,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="getRole" parameterType="java.lang.String" resultType="java.lang.String">
    select role from user where username = #{username, jdbcType=VARCHAR}
  </select>

  <select id="getPassword" parameterType="java.lang.String" resultType="java.lang.String">
    select password from user where username = #{username, jdbcType=VARCHAR}
  </select>

  <select id="getRolePermission" parameterType="java.lang.String" resultType="java.lang.String">
    SELECT role.permission FROM `user`, role WHERE username = #{username, jdbcType=VARCHAR} AND `user`.role = role.role
  </select>

  <select id="getPermission" parameterType="java.lang.String" resultType="java.lang.String">
    SELECT `user`.permission FROM `user` WHERE username = #{username, jdbcType=VARCHAR}
  </select>

  <select id="checkUserBanStatus" parameterType="java.lang.String" resultType="java.lang.Integer">
    select ban from user where username = #{username, jdbcType=VARCHAR}
  </select>

  <select id="getUser" resultType="String">
    select username from user;
  </select>

  <update id="banUser" parameterType="java.lang.String">
    update user set ban = 1 where  username = #{username, jdbcType=VARCHAR}
  </update>
</mapper>